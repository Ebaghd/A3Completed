# The approach you take to generating the sentence to return is up to you.
# A good solution will likely utilize filtering to produce the required data.
# You must round values and present them as percentages in the sentence.
##ticket_class <- c("1st", "2nd", "3rd", "Crew")
#print(ticket_class)
survival_rate <- function(ticket_class, titanic_df){
male_children <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Child")
women <- subset(titanic_df, Class == ticket_class & Sex == "Female")
survived_women <- subset(women, Survived == "Yes")
survived_male_children <- subset(male_children, Survived == "Yes")
survived_women_and_children <- sum(survived_women$Freq, survived_male_children$Freq)
died_male_children <- subset(male_children, Survived == "No")
died_women <- subset(women, Survived == "No")
died_women_and_children <- sum(died_male_children$Freq, died_women$Freq)
print(died_women_and_children)
male_adults <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Adult")
#male_adults <-
}
tee <- survival_rate("1st", titanic_df)
########################### Built in R Data (28 points) ########################
# In this section, you'll work with the `Titanic` data set, which
# is built into the R environment.
# This data set actually loads in a format called a *table*
# See https://cran.r-project.org/web/packages/data.table/data.table.pdf
# Use the `is.data.frame()` function to test if it is a table
is.data.frame(Titanic)
# Create a variable `titanic_df` by converting `Titanic` into a data frame;
# you can use the `data.frame()` function or `as.data.frame()`
# Be sure to **not** treat strings as factors!
titanic_df <- data.frame(Titanic, stringsAsFactors = FALSE)
# It's important to understand the _meaning_ of each column before analyzing it
# NOTE: Seek to fully understand the structure of the data before
# proceeding (Hint: How is the variable, Freq, related to the other variables?)
# Using comments below, describe what information is stored in each column
# For categorical variables, list all possible values
# Class: Describes which class of passenger is being described, (1st class is the most luxurious, 2nd is less luxurious, and 3rd is the least luxurious)
# Sex: Describes the gender of the passengers
# Age: Describes the age of the passengers
# Survived: Whether they survived the sinking of the Titanic
# Freq: How many passengers are being described for each condition
# Create a variable `children` that are the *only* the rows of the data frame
# with information about the number children on the Titanic.
children <- titanic_df[titanic_df$Age == "Child",]
# Create a variable `num_children` that is the total number of children.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has the *row* with the
# largest absolute number of losses (people who did not survive).
# Tip: if you want, you can use multiple statements (lines of code)
# if you find that helpful to create this variable.
most_lost <-  max(titanic_df$Freq)
most_lost <- titanic_df[titanic_df$Freq == most_lost,]
# Define a function called `survival_rate()` that takes in two arguments:
# - a ticket class (e.g., "1st", "2nd"), and
# - the dataframe itself (it's good practice to explicitly pass in data frames)
# This function should return the following
# sentence that states the *survival rate* (# survived / # in group)
# of adult men and "women and children" in that ticketing class.
# It should read (for example):
# Of Crew class, 87% of women and children survived and 22% of men survived.
# The approach you take to generating the sentence to return is up to you.
# A good solution will likely utilize filtering to produce the required data.
# You must round values and present them as percentages in the sentence.
##ticket_class <- c("1st", "2nd", "3rd", "Crew")
#print(ticket_class)
survival_rate <- function(ticket_class, titanic_df){
male_children <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Child")
women <- subset(titanic_df, Class == ticket_class & Sex == "Female")
survived_women <- subset(women, Survived == "Yes")
survived_male_children <- subset(male_children, Survived == "Yes")
survived_women_and_children <- sum(survived_women$Freq, survived_male_children$Freq)
died_male_children <- subset(male_children, Survived == "No")
died_women <- subset(women, Survived == "No")
died_women_and_children <- sum(died_male_children$Freq, died_women$Freq)
total_woman_and_children <- sum(died_women_and_children, survived_women_and_children)
percent_died_women_and_children <- died_women_and_children / total_woman_and_children
percent_survived_women_and_children <- survived_women_and_children / total_woman_and_children
print(percent_survived_women_and_children)
print(percent_died_women_and_children)
male_adults <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Adult")
#male_adults <-
}
tee <- survival_rate("1st", titanic_df)
library(help = "base")
########################### Built in R Data (28 points) ########################
# In this section, you'll work with the `Titanic` data set, which
# is built into the R environment.
# This data set actually loads in a format called a *table*
# See https://cran.r-project.org/web/packages/data.table/data.table.pdf
# Use the `is.data.frame()` function to test if it is a table
is.data.frame(Titanic)
# Create a variable `titanic_df` by converting `Titanic` into a data frame;
# you can use the `data.frame()` function or `as.data.frame()`
# Be sure to **not** treat strings as factors!
titanic_df <- data.frame(Titanic, stringsAsFactors = FALSE)
# It's important to understand the _meaning_ of each column before analyzing it
# NOTE: Seek to fully understand the structure of the data before
# proceeding (Hint: How is the variable, Freq, related to the other variables?)
# Using comments below, describe what information is stored in each column
# For categorical variables, list all possible values
# Class: Describes which class of passenger is being described, (1st class is the most luxurious, 2nd is less luxurious, and 3rd is the least luxurious)
# Sex: Describes the gender of the passengers
# Age: Describes the age of the passengers
# Survived: Whether they survived the sinking of the Titanic
# Freq: How many passengers are being described for each condition
# Create a variable `children` that are the *only* the rows of the data frame
# with information about the number children on the Titanic.
children <- titanic_df[titanic_df$Age == "Child",]
# Create a variable `num_children` that is the total number of children.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has the *row* with the
# largest absolute number of losses (people who did not survive).
# Tip: if you want, you can use multiple statements (lines of code)
# if you find that helpful to create this variable.
most_lost <-  max(titanic_df$Freq)
most_lost <- titanic_df[titanic_df$Freq == most_lost,]
# Define a function called `survival_rate()` that takes in two arguments:
# - a ticket class (e.g., "1st", "2nd"), and
# - the dataframe itself (it's good practice to explicitly pass in data frames)
# This function should return the following
# sentence that states the *survival rate* (# survived / # in group)
# of adult men and "women and children" in that ticketing class.
# It should read (for example):
# Of Crew class, 87% of women and children survived and 22% of men survived.
# The approach you take to generating the sentence to return is up to you.
# A good solution will likely utilize filtering to produce the required data.
# You must round values and present them as percentages in the sentence.
##ticket_class <- c("1st", "2nd", "3rd", "Crew")
#print(ticket_class)
survival_rate <- function(ticket_class, titanic_df){
male_children <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Child")
women <- subset(titanic_df, Class == ticket_class & Sex == "Female")
survived_women <- subset(women, Survived == "Yes")
survived_male_children <- subset(male_children, Survived == "Yes")
survived_women_and_children <- sum(survived_women$Freq, survived_male_children$Freq)
died_male_children <- subset(male_children, Survived == "No")
died_women <- subset(women, Survived == "No")
died_women_and_children <- sum(died_male_children$Freq, died_women$Freq)
total_woman_and_children <- sum(died_women_and_children, survived_women_and_children)
percent_died_women_and_children <- floor(100 * (died_women_and_children / total_woman_and_children))
percent_survived_women_and_children <- floor(100 * (survived_women_and_children / total_woman_and_children))
print(percent_survived_women_and_children)
print(percent_died_women_and_children)
male_adults <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Adult")
#male_adults <-
}
tee <- survival_rate("1st", titanic_df)
########################### Built in R Data (28 points) ########################
# In this section, you'll work with the `Titanic` data set, which
# is built into the R environment.
# This data set actually loads in a format called a *table*
# See https://cran.r-project.org/web/packages/data.table/data.table.pdf
# Use the `is.data.frame()` function to test if it is a table
is.data.frame(Titanic)
# Create a variable `titanic_df` by converting `Titanic` into a data frame;
# you can use the `data.frame()` function or `as.data.frame()`
# Be sure to **not** treat strings as factors!
titanic_df <- data.frame(Titanic, stringsAsFactors = FALSE)
# It's important to understand the _meaning_ of each column before analyzing it
# NOTE: Seek to fully understand the structure of the data before
# proceeding (Hint: How is the variable, Freq, related to the other variables?)
# Using comments below, describe what information is stored in each column
# For categorical variables, list all possible values
# Class: Describes which class of passenger is being described, (1st class is the most luxurious, 2nd is less luxurious, and 3rd is the least luxurious)
# Sex: Describes the gender of the passengers
# Age: Describes the age of the passengers
# Survived: Whether they survived the sinking of the Titanic
# Freq: How many passengers are being described for each condition
# Create a variable `children` that are the *only* the rows of the data frame
# with information about the number children on the Titanic.
children <- titanic_df[titanic_df$Age == "Child",]
# Create a variable `num_children` that is the total number of children.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has the *row* with the
# largest absolute number of losses (people who did not survive).
# Tip: if you want, you can use multiple statements (lines of code)
# if you find that helpful to create this variable.
most_lost <-  max(titanic_df$Freq)
most_lost <- titanic_df[titanic_df$Freq == most_lost,]
# Define a function called `survival_rate()` that takes in two arguments:
# - a ticket class (e.g., "1st", "2nd"), and
# - the dataframe itself (it's good practice to explicitly pass in data frames)
# This function should return the following
# sentence that states the *survival rate* (# survived / # in group)
# of adult men and "women and children" in that ticketing class.
# It should read (for example):
# Of Crew class, 87% of women and children survived and 22% of men survived.
# The approach you take to generating the sentence to return is up to you.
# A good solution will likely utilize filtering to produce the required data.
# You must round values and present them as percentages in the sentence.
##ticket_class <- c("1st", "2nd", "3rd", "Crew")
#print(ticket_class)
survival_rate <- function(ticket_class, titanic_df){
male_children <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Child")
women <- subset(titanic_df, Class == ticket_class & Sex == "Female")
survived_women <- subset(women, Survived == "Yes")
survived_male_children <- subset(male_children, Survived == "Yes")
survived_women_and_children <- sum(survived_women$Freq, survived_male_children$Freq)
died_male_children <- subset(male_children, Survived == "No")
died_women <- subset(women, Survived == "No")
died_women_and_children <- sum(died_male_children$Freq, died_women$Freq)
total_woman_and_children <- sum(died_women_and_children, survived_women_and_children)
percent_died_women_and_children <- floor(100 * (died_women_and_children / total_woman_and_children))
percent_survived_women_and_children <- floor(100 * (survived_women_and_children / total_woman_and_children))
print(percent_survived_women_and_children)
print(percent_died_women_and_children)
male_adults <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Adult")
survived_male_adult <- subset(male_adults, Survived == "Yes")
died_male_adult <- subset(male_adults, Survived == "No")
total_male_adult <- sum(survived_male_adult, died_male_adult)
percent_died_male_adult <- floor(100 * (died_male_adult / total_male_adult))
percent_survived_male_adult <- floor(100 * (died_male_adult / total_male_adult))
return(paste0("Of ", ticket_class, " class, ", percent_survived_women_and_children, "% of women and children survived and ", percent_survived_male_adult, "% of men survived"))
}
tee <- survival_rate("1st", titanic_df)
########################### Built in R Data (28 points) ########################
# In this section, you'll work with the `Titanic` data set, which
# is built into the R environment.
# This data set actually loads in a format called a *table*
# See https://cran.r-project.org/web/packages/data.table/data.table.pdf
# Use the `is.data.frame()` function to test if it is a table
is.data.frame(Titanic)
# Create a variable `titanic_df` by converting `Titanic` into a data frame;
# you can use the `data.frame()` function or `as.data.frame()`
# Be sure to **not** treat strings as factors!
titanic_df <- data.frame(Titanic, stringsAsFactors = FALSE)
# It's important to understand the _meaning_ of each column before analyzing it
# NOTE: Seek to fully understand the structure of the data before
# proceeding (Hint: How is the variable, Freq, related to the other variables?)
# Using comments below, describe what information is stored in each column
# For categorical variables, list all possible values
# Class: Describes which class of passenger is being described, (1st class is the most luxurious, 2nd is less luxurious, and 3rd is the least luxurious)
# Sex: Describes the gender of the passengers
# Age: Describes the age of the passengers
# Survived: Whether they survived the sinking of the Titanic
# Freq: How many passengers are being described for each condition
# Create a variable `children` that are the *only* the rows of the data frame
# with information about the number children on the Titanic.
children <- titanic_df[titanic_df$Age == "Child",]
# Create a variable `num_children` that is the total number of children.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has the *row* with the
# largest absolute number of losses (people who did not survive).
# Tip: if you want, you can use multiple statements (lines of code)
# if you find that helpful to create this variable.
most_lost <-  max(titanic_df$Freq)
most_lost <- titanic_df[titanic_df$Freq == most_lost,]
# Define a function called `survival_rate()` that takes in two arguments:
# - a ticket class (e.g., "1st", "2nd"), and
# - the dataframe itself (it's good practice to explicitly pass in data frames)
# This function should return the following
# sentence that states the *survival rate* (# survived / # in group)
# of adult men and "women and children" in that ticketing class.
# It should read (for example):
# Of Crew class, 87% of women and children survived and 22% of men survived.
# The approach you take to generating the sentence to return is up to you.
# A good solution will likely utilize filtering to produce the required data.
# You must round values and present them as percentages in the sentence.
##ticket_class <- c("1st", "2nd", "3rd", "Crew")
#print(ticket_class)
survival_rate <- function(ticket_class, titanic_df){
male_children <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Child")
women <- subset(titanic_df, Class == ticket_class & Sex == "Female")
survived_women <- subset(women, Survived == "Yes")
survived_male_children <- subset(male_children, Survived == "Yes")
survived_women_and_children <- sum(survived_women$Freq, survived_male_children$Freq)
died_male_children <- subset(male_children, Survived == "No")
died_women <- subset(women, Survived == "No")
died_women_and_children <- sum(died_male_children$Freq, died_women$Freq)
total_woman_and_children <- sum(died_women_and_children, survived_women_and_children)
percent_died_women_and_children <- floor(100 * (died_women_and_children / total_woman_and_children))
percent_survived_women_and_children <- floor(100 * (survived_women_and_children / total_woman_and_children))
print(percent_survived_women_and_children)
print(percent_died_women_and_children)
male_adults <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Adult")
survived_male_adult <- subset(male_adults, Survived == "Yes")
died_male_adult <- subset(male_adults, Survived == "No")
total_male_adult <- sum(survived_male_adult, died_male_adult)
percent_died_male_adult <- floor(100 * (died_male_adult / total_male_adult))
percent_survived_male_adult <- floor(100 * (died_male_adult / total_male_adult))
final <- paste0("Of ", ticket_class, " class, ", percent_survived_women_and_children, "% of women and children survived and ", percent_survived_male_adult, "% of men survived")
final
}
tee <- survival_rate("1st", titanic_df)
########################### Built in R Data (28 points) ########################
# In this section, you'll work with the `Titanic` data set, which
# is built into the R environment.
# This data set actually loads in a format called a *table*
# See https://cran.r-project.org/web/packages/data.table/data.table.pdf
# Use the `is.data.frame()` function to test if it is a table
is.data.frame(Titanic)
# Create a variable `titanic_df` by converting `Titanic` into a data frame;
# you can use the `data.frame()` function or `as.data.frame()`
# Be sure to **not** treat strings as factors!
titanic_df <- data.frame(Titanic, stringsAsFactors = FALSE)
# It's important to understand the _meaning_ of each column before analyzing it
# NOTE: Seek to fully understand the structure of the data before
# proceeding (Hint: How is the variable, Freq, related to the other variables?)
# Using comments below, describe what information is stored in each column
# For categorical variables, list all possible values
# Class: Describes which class of passenger is being described, (1st class is the most luxurious, 2nd is less luxurious, and 3rd is the least luxurious)
# Sex: Describes the gender of the passengers
# Age: Describes the age of the passengers
# Survived: Whether they survived the sinking of the Titanic
# Freq: How many passengers are being described for each condition
# Create a variable `children` that are the *only* the rows of the data frame
# with information about the number children on the Titanic.
children <- titanic_df[titanic_df$Age == "Child",]
# Create a variable `num_children` that is the total number of children.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has the *row* with the
# largest absolute number of losses (people who did not survive).
# Tip: if you want, you can use multiple statements (lines of code)
# if you find that helpful to create this variable.
most_lost <-  max(titanic_df$Freq)
most_lost <- titanic_df[titanic_df$Freq == most_lost,]
# Define a function called `survival_rate()` that takes in two arguments:
# - a ticket class (e.g., "1st", "2nd"), and
# - the dataframe itself (it's good practice to explicitly pass in data frames)
# This function should return the following
# sentence that states the *survival rate* (# survived / # in group)
# of adult men and "women and children" in that ticketing class.
# It should read (for example):
# Of Crew class, 87% of women and children survived and 22% of men survived.
# The approach you take to generating the sentence to return is up to you.
# A good solution will likely utilize filtering to produce the required data.
# You must round values and present them as percentages in the sentence.
##ticket_class <- c("1st", "2nd", "3rd", "Crew")
#print(ticket_class)
survival_rate <- function(ticket_class, titanic_df){
male_children <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Child")
women <- subset(titanic_df, Class == ticket_class & Sex == "Female")
survived_women <- subset(women, Survived == "Yes")
survived_male_children <- subset(male_children, Survived == "Yes")
survived_women_and_children <- sum(survived_women$Freq, survived_male_children$Freq)
died_male_children <- subset(male_children, Survived == "No")
died_women <- subset(women, Survived == "No")
died_women_and_children <- sum(died_male_children$Freq, died_women$Freq)
total_woman_and_children <- sum(died_women_and_children, survived_women_and_children)
percent_died_women_and_children <- floor(100 * (died_women_and_children / total_woman_and_children))
percent_survived_women_and_children <- floor(100 * (survived_women_and_children / total_woman_and_children))
print(percent_survived_women_and_children)
print(percent_died_women_and_children)
male_adults <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Adult")
survived_male_adult <- subset(male_adults, Survived == "Yes")
died_male_adult <- subset(male_adults, Survived == "No")
total_male_adult <- sum(survived_male_adult, died_male_adult)
percent_died_male_adult <- floor(100 * (died_male_adult / total_male_adult))
percent_survived_male_adult <- floor(100 * (died_male_adult / total_male_adult))
final <- paste("Of ", ticket_class, " class, ", percent_survived_women_and_children, "% of women and children survived and ", percent_survived_male_adult, "% of men survived")
print(final)
}
tee <- survival_rate("1st", titanic_df)
########################### Built in R Data (28 points) ########################
# In this section, you'll work with the `Titanic` data set, which
# is built into the R environment.
# This data set actually loads in a format called a *table*
# See https://cran.r-project.org/web/packages/data.table/data.table.pdf
# Use the `is.data.frame()` function to test if it is a table
is.data.frame(Titanic)
# Create a variable `titanic_df` by converting `Titanic` into a data frame;
# you can use the `data.frame()` function or `as.data.frame()`
# Be sure to **not** treat strings as factors!
titanic_df <- data.frame(Titanic, stringsAsFactors = FALSE)
# It's important to understand the _meaning_ of each column before analyzing it
# NOTE: Seek to fully understand the structure of the data before
# proceeding (Hint: How is the variable, Freq, related to the other variables?)
# Using comments below, describe what information is stored in each column
# For categorical variables, list all possible values
# Class: Describes which class of passenger is being described, (1st class is the most luxurious, 2nd is less luxurious, and 3rd is the least luxurious)
# Sex: Describes the gender of the passengers
# Age: Describes the age of the passengers
# Survived: Whether they survived the sinking of the Titanic
# Freq: How many passengers are being described for each condition
# Create a variable `children` that are the *only* the rows of the data frame
# with information about the number children on the Titanic.
children <- titanic_df[titanic_df$Age == "Child",]
# Create a variable `num_children` that is the total number of children.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has the *row* with the
# largest absolute number of losses (people who did not survive).
# Tip: if you want, you can use multiple statements (lines of code)
# if you find that helpful to create this variable.
most_lost <-  max(titanic_df$Freq)
most_lost <- titanic_df[titanic_df$Freq == most_lost,]
# Define a function called `survival_rate()` that takes in two arguments:
# - a ticket class (e.g., "1st", "2nd"), and
# - the dataframe itself (it's good practice to explicitly pass in data frames)
# This function should return the following
# sentence that states the *survival rate* (# survived / # in group)
# of adult men and "women and children" in that ticketing class.
# It should read (for example):
# Of Crew class, 87% of women and children survived and 22% of men survived.
# The approach you take to generating the sentence to return is up to you.
# A good solution will likely utilize filtering to produce the required data.
# You must round values and present them as percentages in the sentence.
##ticket_class <- c("1st", "2nd", "3rd", "Crew")
#print(ticket_class)
survival_rate <- function(ticket_class, titanic_df){
male_children <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Child")
women <- subset(titanic_df, Class == ticket_class & Sex == "Female")
survived_women <- subset(women, Survived == "Yes")
survived_male_children <- subset(male_children, Survived == "Yes")
survived_women_and_children <- sum(survived_women$Freq, survived_male_children$Freq)
died_male_children <- subset(male_children, Survived == "No")
died_women <- subset(women, Survived == "No")
died_women_and_children <- sum(died_male_children$Freq, died_women$Freq)
total_woman_and_children <- sum(died_women_and_children, survived_women_and_children)
percent_died_women_and_children <- floor(100 * (died_women_and_children / total_woman_and_children))
percent_survived_women_and_children <- floor(100 * (survived_women_and_children / total_woman_and_children))
print(percent_survived_women_and_children)
print(percent_died_women_and_children)
male_adults <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Adult")
survived_male_adult <- subset(male_adults, Survived == "Yes")
died_male_adult <- subset(male_adults, Survived == "No")
total_male_adult <- sum(survived_male_adult, died_male_adult)
percent_died_male_adult <- floor(100 * (died_male_adult / total_male_adult))
percent_survived_male_adult <- floor(100 * (died_male_adult / total_male_adult))
final <- paste("Of ", ticket_class, " class, ", percent_survived_women_and_children, "% of women and children survived and ", percent_survived_male_adult, "% of men survived")
print(final)
}
tee <- survival_rate("1st", titanic_df)
########################### Built in R Data (28 points) ########################
# In this section, you'll work with the `Titanic` data set, which
# is built into the R environment.
# This data set actually loads in a format called a *table*
# See https://cran.r-project.org/web/packages/data.table/data.table.pdf
# Use the `is.data.frame()` function to test if it is a table
is.data.frame(Titanic)
# Create a variable `titanic_df` by converting `Titanic` into a data frame;
# you can use the `data.frame()` function or `as.data.frame()`
# Be sure to **not** treat strings as factors!
titanic_df <- data.frame(Titanic, stringsAsFactors = FALSE)
# It's important to understand the _meaning_ of each column before analyzing it
# NOTE: Seek to fully understand the structure of the data before
# proceeding (Hint: How is the variable, Freq, related to the other variables?)
# Using comments below, describe what information is stored in each column
# For categorical variables, list all possible values
# Class: Describes which class of passenger is being described, (1st class is the most luxurious, 2nd is less luxurious, and 3rd is the least luxurious)
# Sex: Describes the gender of the passengers
# Age: Describes the age of the passengers
# Survived: Whether they survived the sinking of the Titanic
# Freq: How many passengers are being described for each condition
# Create a variable `children` that are the *only* the rows of the data frame
# with information about the number children on the Titanic.
children <- titanic_df[titanic_df$Age == "Child",]
# Create a variable `num_children` that is the total number of children.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has the *row* with the
# largest absolute number of losses (people who did not survive).
# Tip: if you want, you can use multiple statements (lines of code)
# if you find that helpful to create this variable.
most_lost <-  max(titanic_df$Freq)
most_lost <- titanic_df[titanic_df$Freq == most_lost,]
# Define a function called `survival_rate()` that takes in two arguments:
# - a ticket class (e.g., "1st", "2nd"), and
# - the dataframe itself (it's good practice to explicitly pass in data frames)
# This function should return the following
# sentence that states the *survival rate* (# survived / # in group)
# of adult men and "women and children" in that ticketing class.
# It should read (for example):
# Of Crew class, 87% of women and children survived and 22% of men survived.
# The approach you take to generating the sentence to return is up to you.
# A good solution will likely utilize filtering to produce the required data.
# You must round values and present them as percentages in the sentence.
##ticket_class <- c("1st", "2nd", "3rd", "Crew")
#print(ticket_class)
survival_rate <- function(ticket_class, titanic_df){
male_children <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Child")
women <- subset(titanic_df, Class == ticket_class & Sex == "Female")
survived_women <- subset(women, Survived == "Yes")
survived_male_children <- subset(male_children, Survived == "Yes")
survived_women_and_children <- sum(survived_women$Freq, survived_male_children$Freq)
died_male_children <- subset(male_children, Survived == "No")
died_women <- subset(women, Survived == "No")
died_women_and_children <- sum(died_male_children$Freq, died_women$Freq)
total_woman_and_children <- sum(died_women_and_children, survived_women_and_children)
percent_died_women_and_children <- floor(100 * (died_women_and_children / total_woman_and_children))
percent_survived_women_and_children <- floor(100 * (survived_women_and_children / total_woman_and_children))
print(percent_survived_women_and_children)
print(percent_died_women_and_children)
male_adults <- subset(titanic_df, Class == ticket_class & Sex == "Male" & Age == "Adult")
survived_male_adult <- subset(male_adults, Survived == "Yes")
died_male_adult <- subset(male_adults, Survived == "No")
total_male_adult <- sum(survived_male_adult, died_male_adult)
percent_died_male_adult <- floor(100 * (died_male_adult / total_male_adult))
percent_survived_male_adult <- floor(100 * (died_male_adult / total_male_adult))
print(percent_survived_male_adult)
print(percent_died_male_adult)
# Write a function `compare_change()` that takes in two country names and your
# `life_exp` data frame as parameters, and returns a sentence that describes
# their change in life expectancy from 2000 to 2018 (the `change` column)
# For example, if you passed the values "China", and "Bolivia" to you function,
# It would return this:
# "The country with the bigger change in life expectancy was China (gain=6.9),
#  whose life expectancy grew by 0.6 years more than Bolivia's (gain=6.3)."
# Make sure to round your numbers to one digit (though only after calculations!)
compare_change <- function(country1, country2, df){
country1_values <- subset(life_exp, country == country1,)
country2_values <- subset(life_exp, country == country2,)
country1_values <- get_col_mean(country1_values, "X2000")
country2_values <- get_col_mean(country2_values, "X2000")
}
getwd()
setwd("data")
tee <- compare_change("Afghanistan", "Albania", life_exp)
